{"ast":null,"code":"const redux = require('redux');\n\nconst countReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type == 'increment') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type == 'increase') {\n    return {\n      counter: state.counter + action.amount\n    };\n  }\n\n  if (action.type == 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n\n  return state;\n};\n\nconst store = redux.createStore(countReducer);\nexport default store;","map":{"version":3,"names":["redux","require","countReducer","state","initialState","action","type","counter","amount","store","createStore"],"sources":["/Users/lokendra/react/redux/src/store/index.js"],"sourcesContent":["const redux = require('redux')\n\nconst countReducer = (state = initialState, action) => {\n    if(action.type == 'increment') {\n        return {\n            counter: state.counter + 1\n        }\n    }\n    if(action.type == 'increase') {\n        return {\n            counter: state.counter + action.amount\n        }\n    }\n    if(action.type == 'decrement') {\n        return {\n            counter: state.counter - 1\n        }\n    }\n    return  state\n}\n\nconst store = redux.createStore(countReducer)\n\nexport default store;\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBC,YAAyB;EAAA,IAAXC,MAAW;;EACnD,IAAGA,MAAM,CAACC,IAAP,IAAe,WAAlB,EAA+B;IAC3B,OAAO;MACHC,OAAO,EAAEJ,KAAK,CAACI,OAAN,GAAgB;IADtB,CAAP;EAGH;;EACD,IAAGF,MAAM,CAACC,IAAP,IAAe,UAAlB,EAA8B;IAC1B,OAAO;MACHC,OAAO,EAAEJ,KAAK,CAACI,OAAN,GAAgBF,MAAM,CAACG;IAD7B,CAAP;EAGH;;EACD,IAAGH,MAAM,CAACC,IAAP,IAAe,WAAlB,EAA+B;IAC3B,OAAO;MACHC,OAAO,EAAEJ,KAAK,CAACI,OAAN,GAAgB;IADtB,CAAP;EAGH;;EACD,OAAQJ,KAAR;AACH,CAjBD;;AAmBA,MAAMM,KAAK,GAAGT,KAAK,CAACU,WAAN,CAAkBR,YAAlB,CAAd;AAEA,eAAeO,KAAf"},"metadata":{},"sourceType":"module"}