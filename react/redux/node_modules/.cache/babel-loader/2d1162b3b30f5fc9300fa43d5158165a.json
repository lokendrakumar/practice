{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggle(state) {\n      !state.showCounter;\n    }\n\n  }\n}); // const countReducer = (state = initialState, action) => {\n//     if(action.type == 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type == 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type == 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type == 'toggle') {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return  state\n// }\n\nconst store = redux.createStore(countReducer);\nexport default store;","map":{"version":3,"names":["createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggle","store","redux","createStore","countReducer"],"sources":["/Users/lokendra/react/redux/src/store/index.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = { counter: 0, showCounter : true};\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: initialState,\n    reducers: {\n        increment(state){\n            state.counter++\n        },\n        decrement(state){\n            state.counter--\n        },\n        increase(state, action){\n            state.counter = state.counter + action.amount\n        },\n        toggle(state){\n            !state.showCounter\n        }\n\n\n    }\n})\n\n\n// const countReducer = (state = initialState, action) => {\n//     if(action.type == 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type == 'increase') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type == 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if(action.type == 'toggle') {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return  state\n// }\n\nconst store = redux.createStore(countReducer)\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAG;AAA5B,CAArB;AACA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SADuB;EAE7BJ,YAAY,EAAEA,YAFe;EAG7BK,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAD,EAAO;MACZA,KAAK,CAACN,OAAN;IACH,CAHK;;IAINO,SAAS,CAACD,KAAD,EAAO;MACZA,KAAK,CAACN,OAAN;IACH,CANK;;IAONQ,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAe;MACnBH,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,MAAvC;IACH,CATK;;IAUNC,MAAM,CAACL,KAAD,EAAO;MACT,CAACA,KAAK,CAACL,WAAP;IACH;;EAZK;AAHmB,CAAD,CAAhC,C,CAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMW,KAAK,GAAGC,KAAK,CAACC,WAAN,CAAkBC,YAAlB,CAAd;AAEA,eAAeH,KAAf"},"metadata":{},"sourceType":"module"}