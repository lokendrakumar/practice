{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {},\n\n    decrement(state) {},\n\n    increase() {},\n\n    toggle() {}\n\n  }\n});\n\nconst countReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type == 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type == 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type == 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type == 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = redux.createStore(countReducer);\nexport default store;","map":{"version":3,"names":["createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","toggle","countReducer","action","type","amount","store","redux","createStore"],"sources":["/Users/lokendra/react/redux/src/store/index.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = { counter: 0, showCounter : true};\ncreateSlice({\n    name: 'counter',\n    initialState: initialState,\n    reducers: {\n        increment(state){},\n        decrement(state){},\n        increase(){},\n        toggle(){}\n\n\n    }\n})\n\n\nconst countReducer = (state = initialState, action) => {\n    if(action.type == 'increment') {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        }\n    }\n    if(action.type == 'increase') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        }\n    }\n    if(action.type == 'decrement') {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        }\n    }\n    if(action.type == 'toggle') {\n        return {\n            counter: state.counter,\n            showCounter: !state.showCounter\n        }\n    }\n    return  state\n}\n\nconst store = redux.createStore(countReducer)\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAG;AAA5B,CAArB;AACAH,WAAW,CAAC;EACRI,IAAI,EAAE,SADE;EAERH,YAAY,EAAEA,YAFN;EAGRI,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAD,EAAO,CAAE,CADZ;;IAENC,SAAS,CAACD,KAAD,EAAO,CAAE,CAFZ;;IAGNE,QAAQ,GAAE,CAAE,CAHN;;IAINC,MAAM,GAAE,CAAE;;EAJJ;AAHF,CAAD,CAAX;;AAcA,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCJ,KAAiC,uEAAzBN,YAAyB;EAAA,IAAXW,MAAW;;EACnD,IAAGA,MAAM,CAACC,IAAP,IAAe,WAAlB,EAA+B;IAC3B,OAAO;MACHX,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADtB;MAEHC,WAAW,EAAEI,KAAK,CAACJ;IAFhB,CAAP;EAIH;;EACD,IAAGS,MAAM,CAACC,IAAP,IAAe,UAAlB,EAA8B;IAC1B,OAAO;MACHX,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBU,MAAM,CAACE,MAD7B;MAEHX,WAAW,EAAEI,KAAK,CAACJ;IAFhB,CAAP;EAIH;;EACD,IAAGS,MAAM,CAACC,IAAP,IAAe,WAAlB,EAA+B;IAC3B,OAAO;MACHX,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADtB;MAEHC,WAAW,EAAEI,KAAK,CAACJ;IAFhB,CAAP;EAIH;;EACD,IAAGS,MAAM,CAACC,IAAP,IAAe,QAAlB,EAA4B;IACxB,OAAO;MACHX,OAAO,EAAEK,KAAK,CAACL,OADZ;MAEHC,WAAW,EAAE,CAACI,KAAK,CAACJ;IAFjB,CAAP;EAIH;;EACD,OAAQI,KAAR;AACH,CA1BD;;AA4BA,MAAMQ,KAAK,GAAGC,KAAK,CAACC,WAAN,CAAkBN,YAAlB,CAAd;AAEA,eAAeI,KAAf"},"metadata":{},"sourceType":"module"}