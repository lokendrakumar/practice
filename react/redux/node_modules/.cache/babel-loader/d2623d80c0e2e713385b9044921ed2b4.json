{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\nconst countReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type == 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type == 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type == 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type == 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = redux.createStore(countReducer);\nexport default store;","map":{"version":3,"names":["createSlice","initialState","counter","showCounter","countReducer","state","action","type","amount","store","redux","createStore"],"sources":["/Users/lokendra/react/redux/src/store/index.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nconst initialState = { counter: 0, showCounter : true};\nconst countReducer = (state = initialState, action) => {\n    if(action.type == 'increment') {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        }\n    }\n    if(action.type == 'increase') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        }\n    }\n    if(action.type == 'decrement') {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        }\n    }\n    if(action.type == 'toggle') {\n        return {\n            counter: state.counter,\n            showCounter: !state.showCounter\n        }\n    }\n    return  state\n}\n\nconst store = redux.createStore(countReducer)\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAG;AAA5B,CAArB;;AACA,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EACnD,IAAGA,MAAM,CAACC,IAAP,IAAe,WAAlB,EAA+B;IAC3B,OAAO;MACHL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADtB;MAEHC,WAAW,EAAEE,KAAK,CAACF;IAFhB,CAAP;EAIH;;EACD,IAAGG,MAAM,CAACC,IAAP,IAAe,UAAlB,EAA8B;IAC1B,OAAO;MACHL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE,MAD7B;MAEHL,WAAW,EAAEE,KAAK,CAACF;IAFhB,CAAP;EAIH;;EACD,IAAGG,MAAM,CAACC,IAAP,IAAe,WAAlB,EAA+B;IAC3B,OAAO;MACHL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADtB;MAEHC,WAAW,EAAEE,KAAK,CAACF;IAFhB,CAAP;EAIH;;EACD,IAAGG,MAAM,CAACC,IAAP,IAAe,QAAlB,EAA4B;IACxB,OAAO;MACHL,OAAO,EAAEG,KAAK,CAACH,OADZ;MAEHC,WAAW,EAAE,CAACE,KAAK,CAACF;IAFjB,CAAP;EAIH;;EACD,OAAQE,KAAR;AACH,CA1BD;;AA4BA,MAAMI,KAAK,GAAGC,KAAK,CAACC,WAAN,CAAkBP,YAAlB,CAAd;AAEA,eAAeK,KAAf"},"metadata":{},"sourceType":"module"}