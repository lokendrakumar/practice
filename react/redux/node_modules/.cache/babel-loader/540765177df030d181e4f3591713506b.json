{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggle() {}\n\n  }\n});\n\nconst countReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type == 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type == 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type == 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type == 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = redux.createStore(countReducer);\nexport default store;","map":{"version":3,"names":["createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","amount","toggle","countReducer","type","store","redux","createStore"],"sources":["/Users/lokendra/react/redux/src/store/index.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = { counter: 0, showCounter : true};\ncreateSlice({\n    name: 'counter',\n    initialState: initialState,\n    reducers: {\n        increment(state){\n            state.counter++\n        },\n        decrement(state){\n            state.counter--\n        },\n        increase(state, action){\n            state.counter = state.counter + action.amount\n        },\n        toggle(){}\n\n\n    }\n})\n\n\nconst countReducer = (state = initialState, action) => {\n    if(action.type == 'increment') {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        }\n    }\n    if(action.type == 'increase') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        }\n    }\n    if(action.type == 'decrement') {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        }\n    }\n    if(action.type == 'toggle') {\n        return {\n            counter: state.counter,\n            showCounter: !state.showCounter\n        }\n    }\n    return  state\n}\n\nconst store = redux.createStore(countReducer)\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAG;AAA5B,CAArB;AACAH,WAAW,CAAC;EACRI,IAAI,EAAE,SADE;EAERH,YAAY,EAAEA,YAFN;EAGRI,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAD,EAAO;MACZA,KAAK,CAACL,OAAN;IACH,CAHK;;IAINM,SAAS,CAACD,KAAD,EAAO;MACZA,KAAK,CAACL,OAAN;IACH,CANK;;IAONO,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAe;MACnBH,KAAK,CAACL,OAAN,GAAgBK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,MAAvC;IACH,CATK;;IAUNC,MAAM,GAAE,CAAE;;EAVJ;AAHF,CAAD,CAAX;;AAoBA,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCN,KAAiC,uEAAzBN,YAAyB;EAAA,IAAXS,MAAW;;EACnD,IAAGA,MAAM,CAACI,IAAP,IAAe,WAAlB,EAA+B;IAC3B,OAAO;MACHZ,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADtB;MAEHC,WAAW,EAAEI,KAAK,CAACJ;IAFhB,CAAP;EAIH;;EACD,IAAGO,MAAM,CAACI,IAAP,IAAe,UAAlB,EAA8B;IAC1B,OAAO;MACHZ,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,MAD7B;MAEHR,WAAW,EAAEI,KAAK,CAACJ;IAFhB,CAAP;EAIH;;EACD,IAAGO,MAAM,CAACI,IAAP,IAAe,WAAlB,EAA+B;IAC3B,OAAO;MACHZ,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADtB;MAEHC,WAAW,EAAEI,KAAK,CAACJ;IAFhB,CAAP;EAIH;;EACD,IAAGO,MAAM,CAACI,IAAP,IAAe,QAAlB,EAA4B;IACxB,OAAO;MACHZ,OAAO,EAAEK,KAAK,CAACL,OADZ;MAEHC,WAAW,EAAE,CAACI,KAAK,CAACJ;IAFjB,CAAP;EAIH;;EACD,OAAQI,KAAR;AACH,CA1BD;;AA4BA,MAAMQ,KAAK,GAAGC,KAAK,CAACC,WAAN,CAAkBJ,YAAlB,CAAd;AAEA,eAAeE,KAAf"},"metadata":{},"sourceType":"module"}